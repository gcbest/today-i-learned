version: 2.1
executors:
  node-16:
    docker:
      - image: cimg/node:16.16.0
orbs: 
  cypress: cypress-io/cypress@2.1.0
  newman: postman/newman@1.0.0

############## Anchors ##############
attach_workspace: &attach_workspace
  attach_workspace:
    at: .
ignore_develop_and_master_branches: &ignore_develop_and_master_branches
  branches:
    ignore:
      - develop
      - master
only_develop_and_master_branches: &only_develop_and_master_branches
  branches:
    only:
      - develop
      - master
only_master_branch: &only_master_branch
  branches:
    only:
      - master
restore_node_modules_cache: &restore_node_modules_cache
  restore_cache:
    key: v1-node-dependencies-{{ checksum "package-lock.json" }}
save_node_modules_cache: &save_node_modules_cache
  save_cache:
    key: v1-node-dependencies-{{ checksum "package-lock.json" }}
    paths: 
      - ./node_modules
restore_next_build_cache: &restore_next_build_cache
  restore_cache:
    key: v1-next-build-dependencies-{{ checksum "package-lock.json" }}
save_next_build_cache: &save_next_build_cache
  save_cache:
    key: v1-next-build-dependencies-{{ checksum "package-lock.json" }}
    paths:
      - ./node_modules
      - ./.next/cache
#####################################

jobs:
  lint:
    executor: node-16
    steps:
      - checkout
      - *restore_node_modules_cache
      - run: 
          name: Install Packages
          command: npm install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
      - run:
          name: Lint Styles 
          command: npx eslint . --ext .js,.jsx,.ts,.tsx
      - *save_node_modules_cache
  build:
    executor: node-16
    steps:
      - checkout
      - *restore_next_build_cache
      - *attach_workspace
      - run:
          name: Build Next App
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .next
      - *save_next_build_cache
  test_integration:
    executor: node-16
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Integration
          command: npm run test:integration
  deploy_staging:
    executor: node-16
    steps:
      - checkout
      - *restore_next_build_cache
      - run:
          name: Deploy
          command: RAILWAY_TOKEN=${RAILWAY_TOKEN_STAGING} railway up
      - *save_next_build_cache
  test_staging_api:
    executor: newman/postman-newman-docker
    steps:
      - checkout
      - run: mkdir test-results
      - newman/newman-run:
          collection: ./__tests__/endpoints/pages.postman_collection.json
          environment: ./__tests__/endpoints/staging.postman_environment.json
          additional-options: -r cli,junit --reporter-junit-export ./test-results
      - store_test_results:
          path: test-results
  deploy_production:
    executor: node-16
    steps:
      - checkout
      - *restore_next_build_cache
      - run:
          name: Deploy
          command: RAILWAY_TOKEN=${RAILWAY_TOKEN_PRODUCTION} railway up
      - *save_next_build_cache

workflows:
  lint_test_deploy:
    jobs:
      - lint:
          filters:
            *ignore_develop_and_master_branches
      - build:
          requires:
            - lint
          filters:
            *ignore_develop_and_master_branches
      - test_integration:
          requires:
            - build
          filters:
            *ignore_develop_and_master_branches
      - cypress/install:
          requires:
            - build
          executor: cypress/base-16-14-2-slim
      - cypress/run:
          requires:
            - cypress/install
          filters:
            *ignore_develop_and_master_branches
          pre-steps:
            - checkout
          executor: cypress/base-16-14-2-slim
          start: npm start
          wait-on: 'http://localhost:3000'
          parallel: true
          parallelism: 2
          group: 'cypress tests'
      - deploy_staging:
          filters:
            *only_develop_and_master_branches
      - test_staging_api:
          requires:
            - deploy_staging
          filters:
            *only_develop_and_master_branches
      - hold:
          requires:
            - test_staging_api
          type: approval
          filters:
            *only_master_branch
      - deploy_production:
          requires:
            - hold
          filters:
            *only_master_branch
