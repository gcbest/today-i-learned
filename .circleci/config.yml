version: 2.1
executors:
  node-16:
    docker:
      - image: gcbest/cimg-pnpm

jobs:
  lint:
    executor: node-16
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Lint Styles 
          command: pnpx eslint . --ext .js,.jsx,.ts,.tsx
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths: 
            - node_modules
  build:
    executor: node-16
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install packages
          command: pnpm install
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths: 
            - ./node_modules
      - restore_cache:
          key: next-build-deps-{{ checksum "pnpm-lock.yaml" }}
      - run: 
          name: Build App
          command: pnpm build
      - save_cache:
          key: next-build-deps-{{ checksum "pnpm-lock.yaml" }}
          paths: 
            - ./.next/cache
  test_unit_integration:
    executor: node-16
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run: 
          name: Install Packages
          command: pnpm install
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths: 
            - node_modules
      - run:
          name: Unit & Integration
          command: pnpm test
  test_e2e:
    docker:
      - image: mcr.microsoft.com/playwright:v1.23.1-focal
    environment:
        NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout
      - restore_cache:
          key: v1-npm-deps-{{ checksum "pnpm-lock.yaml" }}
      - run: 
          name: Install Packages
          command: |
              npx playwright install
              npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "pnpm-lock.yaml" }}
          paths: 
            - node_modules
      - run:
          name: End to End
          command: npm run test:e2e
  deploy_staging:
    executor: node-16
    steps:
      - run:
          name: Install Railway
          command: npm i -g @railway/cli
      # - run:
      #     name: Change Environment
      #     command: railway environment staging
      #     environment:
      #       RAILWAY_TOKEN: ${RAILWAY_TOKEN}
      - run:
          name: Deploy
          command: railway up
          environment:
            RAILWAY_TOKEN: ${RAILWAY_TOKEN}

            
workflows:
  lint_build_test:
    jobs:
      # - lint
      # - build:
      #    requires:
      #     - lint
      # - test_unit_integration:
      #     requires:
      #       - build
      # - test_e2e:
      #     requires:
      #       - build
      - deploy_staging
          # requires:
          #   - test_e2e
          #   - test_unit_integration